{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"DataResponse": {
				"description": "Data returned by the Discord API",
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"username": {
						"type": "string"
					},
					"avatar": {
						"type": "string",
						"nullable": true
					},
					"isBot": {
						"type": "boolean"
					},
					"banner": {
						"type": "string",
						"nullable": true
					},
					"bannerColor": {
						"type": "string",
						"nullable": true
					},
					"badges": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"timestamp": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"created": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"username",
					"avatar",
					"banner",
					"bannerColor",
					"badges",
					"timestamp",
					"created"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LookupResponse": {
				"description": "Data returned by the API",
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/DataResponse"
					}
				},
				"required": [
					"success",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorResponse": {
				"description": "Error response",
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ErrorLookupResponse": {
				"description": "Error returned by the API",
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/DataResponse"
					}
				},
				"required": [
					"success",
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "discord-lookup-api",
		"version": "3.0.0",
		"description": "A simple API to lookup for a Discord User or Bot ID.",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Lucas"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/user/{id}": {
			"get": {
				"operationId": "GetUserByID",
				"responses": {
					"200": {
						"description": "User found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LookupResponse"
								}
							}
						}
					},
					"400": {
						"description": "No query provided",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorLookupResponse"
								}
							}
						}
					},
					"406": {
						"description": "ID must be a number",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"411": {
						"description": "ID must be 15 characters long",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"description": "Get a Discord user by his ID",
				"security": [],
				"parameters": [
					{
						"description": "Discord user ID",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}